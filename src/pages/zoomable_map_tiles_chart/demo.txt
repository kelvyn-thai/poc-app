// import React from "react";
// import * as d3 from "d3";
// import { useReaderFile } from "hooks/useReaderFile";
// import D3ZoomableMapTiles from "components/d3-chart/D3ZoomableMapTiles";
// import { Feature, Item } from "components/d3-chart/D3ZoomableMapTiles/typings";
// import kmlFile from "components/d3-chart/D3ZoomableMapTiles/SingaporeMCE.kml";
// import * as toGeoJSON from "@mapbox/togeojson";
// import Button from "components/core/Button";
// import * as topojson from "topojson";
// import { useLoaderFile } from "hooks/useLoaderFile";
// import { IData } from "./typings";
// import styles from "./styles.module.scss";

// interface IState {
//   isLoading: boolean;
//   topology: TopoJSON.Topology | any;
//   data: IData;
//   geojsonKML: d3.GeoPermissibleObjects[] | any[] | undefined;
// }

// const ZoomableMapTilesChart = () => {
//   const { readData } = useReaderFile();
//   const { loadFile } = useLoaderFile();
//   const [state, setState] = React.useState<IState>({
//     isLoading: true,
//     topology: null,
//     data: {
//       points: [],
//       centerCoordinates: [0, 0],
//       scaleRatio: 22,
//     },
//     geojsonKML: undefined,
//   });
//   const { topology, data, geojsonKML } = state;
//   const features = React.useMemo(() => {
//     const featuresData: Feature[] = [];
//     if (topology) {
//       featuresData.push({
//         geojson: topology,
//         stroke: "none",
//       });
//     }
//     if (geojsonKML) {
//       featuresData.push({
//         geojson: geojsonKML,
//         stroke: "none",
//       });
//     }
//     return featuresData;
//   }, [topology, geojsonKML]);
//   const items = React.useMemo(
//     () =>
//       data.points.map((point) => ({
//         ...point,
//         coordinates: point.position,
//       })),
//     [data.points]
//   );
//   const onHandleUploadFile = React.useCallback(
//     (e: React.ChangeEvent<HTMLInputElement>) => {
//       e.preventDefault();
//       const { files } = e.target;
//       if (files) {
//         readData({
//           files,
//           callbackSetData: async (jsonData: string) => {
//             const topologyJSON = (await d3.json(
//               "https://gist.githubusercontent.com/atwj/b2350b7083c001a74505647a61e89c0e/raw/0637f967d574797186ee9f55b7cbebc757f08ca3/sgtopo.json"
//             )) as TopoJSON.Topology;
//             const kmlString = await loadFile({ url: kmlFile });
//             const geojsonKMLData = toGeoJSON.kml(
//               new DOMParser().parseFromString(kmlString, "text/xml")
//             );
//             setState({
//               ...state,
//               isLoading: false,
//               data: {
//                 ...JSON.parse(jsonData),
//                 centerCoordinates: d3.geoPath().centroid(geojsonKMLData),
//               },
//               topology: topojson.feature(
//                 topologyJSON,
//                 topologyJSON.objects["sg-"]
//               ), // geojson data of map
//               geojsonKML: geojsonKMLData, // geojson of area
//             });
//           },
//         });
//       }
//     },
//     []
//   );
//   return (
//     <div>
//       <Button
//         title="Upload data"
//         useToUploadFile
//         onHandleUploadFile={onHandleUploadFile}
//       />
//       <D3ZoomableMapTiles
//         chartName="Zoomable Map Tiles"
//         isLoading={state.isLoading}
//         features={features}
//         items={items}
//         centerCoordinates={data.centerCoordinates}
//         scaleRatio={data.scaleRatio}
//         renderItem={({ id, name, position, attributes }: Item) => {
//           const factories = [
//             {
//               label: "#ID",
//               value: id,
//             },
//             {
//               label: "Item Name",
//               value: name,
//             },
//             {
//               label: "Coordinates",
//               value: position,
//             },
//             {
//               label: "Attributes",
//               value: attributes,
//             },
//           ];
//           return factories.map(({ label, value }) => (
//             <div key={label} className={`${styles.item}`}>
//               <div className="font-medium">{label}</div>
//               <div className="">{value}</div>
//             </div>
//           ));
//         }}
//       />
//     </div>
//   );
// };

// export default React.memo(ZoomableMapTilesChart);
