{"version":3,"file":"static/js/150.d3b6fc7c.chunk.js","mappings":"sLAIMA,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,SADgB,OAKZ,gBAAKC,UAAWC,EAAAA,EAAAA,eAAhB,SAAwCF,KAM9C,EAAeG,EAAAA,KAAWJ,G,UCbbK,EAAe,WAC1B,MAAqCD,EAAAA,UAAe,GAApD,eACA,MAAO,CACLE,UAFF,KAGEC,gBAHF,OCCIC,EAAmB,kBAAM,gDAEzBC,EAAmB,WACvB,MAAuCJ,IAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBACnB,OACE,4DAEE,mBAAQG,KAAK,SAASC,QAAS,kBAAMJ,GAAgB,IAArD,yCAGCD,IACC,SAAC,EAAD,WACE,SAACE,EAAD,UAMJI,EAAY,WAChB,MAAuCP,IAA/BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBACnB,OACE,4BACE,mBAAQG,KAAK,SAASC,QAAS,kBAAMJ,GAAgB,IAArD,0BAGCD,IACC,SAAC,EAAD,WACE,SAACG,EAAD,UAMV,EAAeL,EAAAA,KAAWQ","sources":["components/core/Modal/Modal.core.tsx","components/core/Modal/Modal.hook.ts","pages/modal-test/index.tsx"],"sourcesContent":["import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport styles from \"./styles.module.scss\";\n\nconst ModalCore = ({\n  children,\n}: React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>) => <div className={styles.modalContainer}>{children}</div>;\n// ReactDOM.createPortal(\n//   <div className={styles.modalContainer}>{children}</div>,\n//   document.querySelector(\"#modal-root\") as Element\n// );\n\nexport default React.memo(ModalCore);\n","import React from \"react\";\n\nexport const useCoreModal = () => {\n  const [isVisible, setVisibleModal] = React.useState(false);\n  return {\n    isVisible,\n    setVisibleModal,\n  };\n};\n","import ModalCore from \"components/core/Modal/Modal.core\";\nimport { useCoreModal } from \"components/core/Modal/Modal.hook\";\nimport React from \"react\";\n\nconst ModalUploadImage = () => <div>Upload image here</div>;\n\nconst ModalContentData = () => {\n  const { isVisible, setVisibleModal } = useCoreModal();\n  return (\n    <div>\n      This is modal to Edit profile\n      <button type=\"button\" onClick={() => setVisibleModal(true)}>\n        Click to edit profile image\n      </button>\n      {isVisible && (\n        <ModalCore>\n          <ModalUploadImage />\n        </ModalCore>\n      )}\n    </div>\n  );\n};\nconst ModalTest = () => {\n  const { isVisible, setVisibleModal } = useCoreModal();\n  return (\n    <div>\n      <button type=\"button\" onClick={() => setVisibleModal(true)}>\n        Choose Image\n      </button>\n      {isVisible && (\n        <ModalCore>\n          <ModalContentData />\n        </ModalCore>\n      )}\n    </div>\n  );\n};\nexport default React.memo(ModalTest);\n"],"names":["ModalCore","children","className","styles","React","useCoreModal","isVisible","setVisibleModal","ModalUploadImage","ModalContentData","type","onClick","ModalTest"],"sourceRoot":""}