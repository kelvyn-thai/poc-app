{"version":3,"file":"static/js/370.0fde4a0a.chunk.js","mappings":"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","sources":["components/charts/D3Sankey/D3Sankey.utils.ts","components/charts/D3Sankey/D3Sankey.tsx","components/charts/D3Sankey/index.ts","hooks/useWindowDimensions.ts","pages/sankey_chart/SankeyChart.tsx","pages/sankey_chart/index.ts"],"sourcesContent":["/* eslint-disable prefer-const */\nimport * as d3 from \"d3\";\nimport uniq from \"lodash/uniq\";\nimport * as d3Sankey from \"d3-sankey\";\nimport {\n  SankeyExtraProperties,\n  sankeyJustify,\n  SankeyLinkMinimal,\n  SankeyNodeMinimal,\n} from \"d3-sankey\";\nimport { IData, IOptions } from \"./D3Sankey.typings\";\n\nexport const intern = (value: SankeyExtraProperties | string | number) =>\n  value !== null && typeof value === \"object\" ? value.valueOf() : value;\n\n// Copyright 2021 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/sankey-diagram\nexport const createSankeyChart = ({\n  data,\n  options,\n  svg,\n  container,\n}: {\n  data: IData;\n  options: IOptions;\n  svg: SVGSVGElement;\n  container: HTMLDivElement;\n}) => {\n  let {\n    nodes, // an iterable of node objects (typically [{id}, …]); implied by links if missing\n    links, // an iterable of link objects (typically [{source, target}, …])\n  } = data;\n  // let Tt: string[] = [];\n  let Tl: string[] = [];\n  let Lt: string[] = [];\n  let color: any;\n  let G: (string | number | Record<string, unknown> | any)[] = [];\n  try {\n    const {\n      format = d3.format,\n      nodeId,\n      nodeLabel,\n      // nodeTitle,\n      nodeAlign = sankeyJustify,\n      nodeWidth = 24,\n      nodePadding = 20,\n      nodeLabelPadding = 6,\n      // nodeStroke = \"currentColor\",\n      // nodeStrokeWidth,\n      // nodeStrokeOpacity = 1,\n      // nodeStrokeLinejoin,\n      linkSource = ({ source }) => source,\n      linkTarget = ({ target }) => target,\n      linkValue = ({ value }) => value,\n      // linkPath,\n      linkTitle,\n      // linkStrokeOpacity = 1,\n      linkMixBlendMode = \"normal\",\n      colors = d3.schemeTableau10,\n      width = 640,\n      height = 400,\n      nodeGroup,\n      standardizeNode,\n      standardizeLink,\n      onMouseEnterLink,\n      onMouseEnterNode,\n      onMouseLeaveLink,\n      onMouseLeaveNode,\n    } = options;\n    // init $svg frame\n    let { linkColor = \"source-target\" } = options;\n    links = links.map((link) => standardizeLink(link));\n    // Compute values.\n    const LS = d3.map(links, linkSource).map(intern);\n    const LT = d3.map(links, linkTarget).map(intern);\n    const LV = d3.map(links, linkValue);\n    const nodesFromLinks = Array.from(d3.union(LS, LT), (id) => ({\n      id,\n      name: id,\n    }));\n    // get nodes from links to make sure source / target is valid\n    nodes = nodesFromLinks.map((node) => standardizeNode(node));\n    const N = d3.map(nodes, nodeId).map(intern);\n    G = d3.map(nodes, (d) => nodeGroup(d)).map(intern);\n    // Replace the input nodes and links with mutable objects for the simulation.\n    nodes = d3.map(nodes, (_, i) => ({ id: N[i] }));\n    links = d3.map(links, (_, i) => ({\n      source: LS[i],\n      target: LT[i],\n      value: LV[i],\n    }));\n    // Ignore a group-based linkColor option if no groups are specified.\n    if (!G && [\"source\", \"target\", \"source-target\"].includes(linkColor))\n      linkColor = \"currentColor\";\n    // Compute default domains.\n    const nodeGroups = G;\n\n    // Construct the scales. The color will scale by d3.scaleOrdinal\n    // Reference: https://observablehq.com/@d3/d3-scaleordinal\n    color = d3.scaleOrdinal(nodeGroups, colors);\n\n    Tl = d3.map(nodes, (d) => (nodeLabel ? nodeLabel(d) : d.id));\n    // Compute the Sankey layout get sankey layout generator =>\n    /**\n     nodes: SankeyNodeMinimal<\n        SankeyExtraProperties,\n        SankeyExtraProperties\n      >[];\n      links: SankeyLinkMinimal<\n        SankeyExtraProperties,\n        SankeyExtraProperties\n      >[]\n     */\n\n    // init a sankey instance\n    const sankey = d3Sankey\n      .sankey()\n      .nodeId(({ index: i }) => N[i as number] as string)\n      .nodeAlign(nodeAlign)\n      .nodeWidth(nodeWidth)\n      .nodePadding(nodePadding)\n      .extent([\n        [20, 20],\n        [width - 10, height - 10],\n      ]);\n\n    // init sankey diagram (graph) from input data\n    const graph = sankey({\n      nodes: [...nodes] as unknown[] as SankeyNodeMinimal<\n        SankeyExtraProperties,\n        SankeyExtraProperties\n      >[],\n      links: [...links] as unknown[] as SankeyLinkMinimal<\n        SankeyExtraProperties,\n        SankeyExtraProperties\n      >[],\n    });\n    nodes = graph.nodes;\n    links = graph.links;\n\n    // Links title mapping\n    Lt = d3.map(links, (d) =>\n      linkTitle\n        ? linkTitle(d)\n        : `${d.source.id} → ${d.target.id}\\n${format(d.value)}`\n    );\n\n    const $svg = d3\n      .select(svg)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewbox\", `0, 0, ${width},${height}`);\n    // This is trick to remove old content.\n    // Because we are combine two ways control + un-control in React APP -> can be conflict dom vs virtual dom\n    $svg.html(\"\");\n    // A unique identifier for clip paths (to avoid conflicts).\n    const uid = `O-${Math.random().toString(16).slice(2)}`;\n\n    let link = $svg\n      .append(\"g\") // $svg will append tag <g fill='none' class='g-links'></g> <=> tag g will contain all links\n      .attr(\"fill\", \"none\") // tag g:  https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g\n      .attr(\"class\", \"g-links\")\n      .selectAll(\"g\"); // , selects the descendant elements 'g-link' in \"g-links\"\n\n    // all tag \"g-link\" will mapping data from 'links' (graph.links - which auto generate from d3 sankey instance)\n    const allLinks = link\n      .data(links)\n      .join(\"g\") // append all 'g-link' from 'graph.links' -> Return void\n      // add some attr for 'g-link'\n      .style(\"mix-blend-mode\", linkMixBlendMode)\n      .attr(\"class\", \"g-link\")\n      .attr(\n        \"stroke\",\n        (d: SankeyExtraProperties) => `url(#${uid}-link-${d.index})` // stroke color mapping id from linear gradient\n      );\n\n    // append linearGradient color for each link\n    allLinks\n      .append(\"linearGradient\")\n      .attr(\"id\", (d: SankeyExtraProperties) => `${uid}-link-${d.index}`)\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", (d: SankeyExtraProperties) => d.source.x1)\n      .attr(\"x2\", (d: SankeyExtraProperties) => d.target.x0)\n      .call(\n        (\n          gradient // Returns this selection.\n        ) =>\n          gradient // gradient <=> this -> append tag <stop offset=\"0%\" stop-color=\"color(G[i])\"></stop>\n            .append(\"stop\")\n            .attr(\"offset\", \"0%\")\n            .attr(\n              \"stop-color\",\n              ({ source: { index: i } }: SankeyExtraProperties) => color(G[i])\n            )\n      )\n      .call(\n        (\n          gradient // Returns this selection.\n        ) =>\n          gradient // gradient <=> this -> append tag <stop offset=\"100%\" stop-color=\"color(G[i])\"></stop>\n            .append(\"stop\")\n            .attr(\"offset\", \"100%\")\n            .attr(\n              \"stop-color\",\n              ({ target: { index: i } }: SankeyExtraProperties) => color(G[i])\n            )\n      );\n\n    const allPathLinks = allLinks\n      .append(\"path\") // append path to raw real-link\n      .attr(\"class\", \"path-link\")\n      .attr(\"stroke-width\", (d: SankeyExtraProperties) => Math.max(d.width, 1))\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"opacity\", 0.5)\n      .on(\"mouseenter\", (event: any, d: SankeyExtraProperties) => {\n        // mouseenter: this event will handle when hover link\n        d3.select(event.target).attr(\"opacity\", \"1\"); // make link hovered highlight\n        const { index } = d;\n        const text = Lt[index];\n        const { pageX, pageY } = event;\n        // show tooltip base on coordinate of mouse\n        d3.select(container)\n          .selectChild(\".tooltip\")\n          .html(text)\n          .style(\"opacity\", \"1\")\n          .style(\"visibility\", \"visible\")\n          .style(\"left\", `${pageX + 20}px`)\n          .style(\"top\", `${pageY - 20}px`);\n        // callback onMouseEnterLink\n        if (typeof onMouseEnterLink === \"function\") {\n          onMouseEnterLink(event, d);\n        }\n      })\n      .on(\"mouseleave\", (event: any, d: SankeyExtraProperties) => {\n        // mouseleave: this event will handle when un-hover link\n        d3.select(event.target).attr(\"opacity\", \"0.5\"); // remove highlight\n        d3.select(container)\n          .selectChild(\".tooltip\")\n          .style(\"opacity\", \"0\")\n          .style(\"visibility\", \"hidden\"); // hide tooltip info\n        // callback onMouseLeaveLink\n        if (typeof onMouseLeaveLink === \"function\") {\n          onMouseLeaveLink(event, d);\n        }\n      })\n      .attr(\n        \"d\",\n        (d: SankeyExtraProperties) =>\n          d3Sankey.sankeyLinkHorizontal()(\n            d as SankeyLinkMinimal<SankeyExtraProperties, SankeyExtraProperties>\n          )\n        /**\n         * Get a horizontal link shape suitable for a Sankey diagram.\n         * Source and target accessors are pre-configured\n         * and work with the default x- and y- accessors of the link shape generator.\n         */\n      );\n\n    const node = $svg\n      .append(\"g\") // $svg will append tag <g fill='none' class='g-nodes'></g> <=> tag g will contain all nodes\n      .attr(\"class\", \"g-nodes\") // tag g:  https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g\n      .selectAll(\"g\");\n\n    const gNodes = node\n      .data(graph.nodes)\n      .enter() // Return the enter selection <=> all 'g-node' tag\n      .append(\"g\")\n      .attr(\"class\", \"g-node\")\n      .call((allGNodes) =>\n        // this\n        // d3.drag: https://github.com/d3/d3-drag\n        d3\n          .drag() // he returned behavior, drag, is both an object and a function, and is typically applied to selected elements via selection.call.\n          // eslint-disable-next-line func-names\n          .on(\"start\", function () {\n            // start drag node\n            // we have to use normal function to access this <=> ONE 'g-node'\n            if (this.parentNode) {\n              this.parentNode.appendChild(this);\n            }\n          })\n          // eslint-disable-next-line func-names\n          .on(\"drag\", function (event: any) {\n            // handle event drag - re-draw sankey diagram\n            // we have to use normal function to access this <=> ONE 'g-node'\n            const rectY = Number(d3.select(this).select(\"rect\").attr(\"y\")); // dy 'g-node'\n            const d = event.subject; // get datum node from event.subject\n            /**\n               * d: d3Sankey.SankeyNodeMinimal<\n                SankeyExtraProperties,\n                SankeyExtraProperties\n               * \n              >\n               */\n            d.y0 += event.dy;\n            const yTranslate = d.y0 - rectY;\n            // node only transform vertical (by y)\n            d3.select(this).attr(\"transform\", `translate(0,${yTranslate})`);\n            allPathLinks.attr(\"d\", (dLink) =>\n              d3Sankey.sankeyLinkHorizontal()(\n                dLink as d3Sankey.SankeyLinkMinimal<\n                  SankeyExtraProperties,\n                  SankeyExtraProperties\n                >\n              )\n            );\n            // re-update graph. Node: we need to separate to 2 parts -> make it can update\n            // 1: sankey instance\n            // 2: graph generator from sankey instance\n            sankey.update(graph);\n          })(allGNodes as any)\n      );\n\n    // all g-nodes will append rect\n    gNodes\n      .append(\"rect\")\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"x\", (d: SankeyExtraProperties) => d.x0)\n      .attr(\"y\", (d: SankeyExtraProperties) => d.y0)\n      .attr(\"height\", (d: SankeyExtraProperties) => Math.max(d.y1 - d.y0, 1))\n      .attr(\"width\", (d: SankeyExtraProperties) => d.x1 - d.x0)\n      .attr(\"fill\", (d: SankeyExtraProperties) => colors[d.depth])\n      .on(\"mouseenter\", (event: any, d: d3Sankey.SankeyExtraProperties) => {\n        // mouseenter: this event will handle when hover node\n        const { sourceLinks, targetLinks } = d;\n        // get all index from links + nodes\n        const indexes = uniq([\n          ...sourceLinks.map(\n            (\n              l:\n                | SankeyLinkMinimal<\n                    SankeyExtraProperties,\n                    SankeyExtraProperties\n                  >\n                | any\n            ) => l.index\n          ),\n          ...targetLinks.map(\n            (\n              l: SankeyLinkMinimal<SankeyExtraProperties, SankeyExtraProperties>\n            ) => l.index\n          ),\n        ]);\n        // highlight all path links from a node which selected\n        allPathLinks.attr(\"opacity\", (datum: SankeyExtraProperties) =>\n          indexes.includes(datum.index) ? \"1\" : \"0.5\"\n        );\n        // callback onMouseEnterNode\n        if (typeof onMouseEnterNode === \"function\") {\n          onMouseEnterNode(event, d);\n        }\n      })\n      .on(\"mouseleave\", (event: any, d: d3Sankey.SankeyExtraProperties) => {\n        // mouseleave: this event will handle when un-hover link\n        allPathLinks.attr(\"opacity\", \"0.5\");\n        // callback onMouseLeaveNode\n        if (typeof onMouseLeaveNode === \"function\") {\n          onMouseLeaveNode(event, d);\n        }\n      });\n\n    // append text\n    gNodes\n      .append(\"text\")\n      .join(\"text\")\n      .attr(\"x\", (d: SankeyExtraProperties) =>\n        d.x0 < width / 2 ? d.x1 + nodeLabelPadding : d.x0 - nodeLabelPadding\n      )\n      .attr(\"y\", (d: SankeyExtraProperties) => (d.y1 + d.y0) / 2)\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"text-anchor\", (d: SankeyExtraProperties) =>\n        d.x0 < width / 2 ? \"start\" : \"end\"\n      )\n      .attr(\"fill\", \"#FFFFFF\")\n      .attr(\"stroke\", \"#FFFFFF\")\n      .attr(\"font-size\", \"16\")\n      .text(({ index: i }: SankeyExtraProperties) => Tl[i]);\n  } catch (error) {\n    // console.log(error);\n  }\n};\n","import React from \"react\";\nimport D3Chart, { IBaseD3ChartProps } from \"components/charts/D3Chart\";\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\nimport { createSankeyChart } from \"./D3Sankey.utils\";\nimport { IData } from \"./D3Sankey.typings\";\n\ninterface IProps extends IBaseD3ChartProps {\n  data: IData;\n}\n\nconst D3Sankey = ({ data, ...rest }: IProps) => {\n  const ref = React.useRef(null);\n  const refSVG = React.useRef(null);\n  const { width, height } = useWindowDimensions();\n  React.useLayoutEffect(() => {\n    if (data?.links?.length > 0 && ref.current && refSVG.current) {\n      createSankeyChart({\n        data,\n        options: {\n          nodeWidth: 24,\n          nodeGroup: (d) => d.id.split(/\\W/)[0],\n          nodeId: (d) => d.id,\n          standardizeNode: (d) => ({ id: d.name }),\n          standardizeLink: (d) => ({\n            source: d.source,\n            target: d.target,\n            value: d.value,\n          }),\n          width: 0.5 * width,\n          height: 0.75 * height,\n        },\n        svg: refSVG.current,\n        container: ref.current,\n      });\n    }\n  }, [ref, refSVG, data]);\n\n  return (\n    <D3Chart {...{ ...rest, ref: { ref, refSVG } as any }}>\n      <div className=\"tooltip fixed -[1000] invisible opacity-0 flex justify-center items-center p-[10px] h-[40px] bg-white rounded-[4px] shadow-xl text-black\" />\n    </D3Chart>\n  );\n};\n\nexport default React.memo(D3Sankey);\n","import D3Sankey from \"./D3Sankey\";\n\nexport * from \"./D3Sankey.typings\";\n\nexport default D3Sankey;\n","import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nexport default useWindowDimensions;\n","import React from \"react\";\nimport D3Sankey from \"components/charts/D3Sankey\";\nimport json from \"./sankey.json\";\n\nconst SankeyChart = () => <D3Sankey data={json} />;\n\nexport default React.memo(SankeyChart);\n","import SankeyChart from \"./SankeyChart\";\n\nexport default SankeyChart;\n"],"names":["intern","value","valueOf","D3Sankey","data","rest","ref","React","refSVG","useWindowDimensions","width","height","links","length","current","color","options","svg","container","nodes","Tl","Lt","G","format","d3","nodeId","nodeLabel","nodeAlign","sankeyJustify","nodeWidth","nodePadding","nodeLabelPadding","linkSource","source","linkTarget","target","linkValue","linkTitle","linkMixBlendMode","colors","nodeGroup","standardizeNode","standardizeLink","onMouseEnterLink","onMouseEnterNode","onMouseLeaveLink","onMouseLeaveNode","linkColor","map","link","LS","LT","LV","Array","from","id","name","node","N","d","_","i","includes","nodeGroups","sankey","d3Sankey","index","extent","graph","$svg","attr","html","uid","Math","random","toString","slice","allLinks","append","selectAll","join","style","x1","x0","call","gradient","allPathLinks","max","on","event","text","pageX","pageY","selectChild","gNodes","enter","allGNodes","this","parentNode","appendChild","rectY","Number","select","subject","y0","dy","yTranslate","dLink","update","y1","depth","sourceLinks","targetLinks","indexes","uniq","l","datum","error","createSankeyChart","split","D3Chart","className","getWindowDimensions","window","innerWidth","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","SankeyChart","json"],"sourceRoot":""}