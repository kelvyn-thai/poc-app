{"version":3,"file":"static/js/181.9cbde084.chunk.js","mappings":"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","sources":["../node_modules/d3-tile/src/tile.js","components/charts/D3ZoomableMapTiles/D3ZoomableMapTiles.utils.ts","webpack://poc-app/./src/components/charts/D3ZoomableMapTiles/D3ZoomableMapTiles.styles.module.scss?98b7","components/charts/D3ZoomableMapTiles/D3ZoomableMapTiles.tsx","components/charts/D3ZoomableMapTiles/index.ts","pages/zoomable_map_tiles_chart/index.tsx"],"sourcesContent":["function defaultScale(t) {\n  return t.k;\n}\n\nfunction defaultTranslate(t) {\n  return [t.x, t.y];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nexport default function() {\n  let x0 = 0, y0 = 0, x1 = 960, y1 = 500;\n  let clampX = true, clampY = true;\n  let tileSize = 256;\n  let scale = defaultScale;\n  let translate = defaultTranslate;\n  let zoomDelta = 0;\n\n  function tile() {\n    const scale_ = +scale.apply(this, arguments);\n    const translate_ = translate.apply(this, arguments);\n    const z = Math.log2(scale_ / tileSize);\n    const z0 = Math.round(Math.max(z + zoomDelta, 0));\n    const k = Math.pow(2, z - z0) * tileSize;\n    const x = +translate_[0] - scale_ / 2;\n    const y = +translate_[1] - scale_ / 2;\n    const xmin = Math.max(clampX ? 0 : -Infinity, Math.floor((x0 - x) / k));\n    const xmax = Math.min(clampX ? 1 << z0 : Infinity, Math.ceil((x1 - x) / k));\n    const ymin = Math.max(clampY ? 0 : -Infinity, Math.floor((y0 - y) / k));\n    const ymax = Math.min(clampY ? 1 << z0 : Infinity, Math.ceil((y1 - y) / k));\n    const tiles = [];\n    for (let y = ymin; y < ymax; ++y) {\n      for (let x = xmin; x < xmax; ++x) {\n        tiles.push([x, y, z0]);\n      }\n    }\n    tiles.translate = [x / k, y / k];\n    tiles.scale = k;\n    return tiles;\n  }\n\n  tile.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], tile) : [x1 - x0, y1 - y0];\n  };\n\n  tile.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], tile) : [[x0, y0], [x1, y1]];\n  };\n\n  tile.scale = function(_) {\n    return arguments.length ? (scale = typeof _ === \"function\" ? _ : constant(+_), tile) : scale;\n  };\n\n  tile.translate = function(_) {\n    return arguments.length ? (translate = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), tile) : translate;\n  };\n\n  tile.zoomDelta = function(_) {\n    return arguments.length ? (zoomDelta = +_, tile) : zoomDelta;\n  };\n\n  tile.tileSize = function(_) {\n    return arguments.length ? (tileSize = +_, tile) : tileSize;\n  };\n\n  tile.clamp = function(_) {\n    return arguments.length ? (clampX = clampY = !!_, tile) : clampX && clampY;\n  };\n\n  tile.clampX = function(_) {\n    return arguments.length ? (clampX = !!_, tile) : clampX;\n  };\n\n  tile.clampY = function(_) {\n    return arguments.length ? (clampY = !!_, tile) : clampY;\n  };\n\n  return tile;\n}\n","/* eslint-disable no-bitwise */\nimport * as d3 from \"d3\";\nimport * as d3Tile from \"d3-tile\";\nimport * as d3Hexbin from \"d3-hexbin\";\nimport { Item, TypeZoomableMapTilesChart } from \"./D3ZoomableMapTiles.typings\";\n\nconst url = (x: number, y: number, z: number) =>\n  `https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/${z}/${x}/${y}${\n    devicePixelRatio > 1 ? \"@2x\" : \"\"\n  }?access_token=pk.eyJ1IjoieWtkbjk2cyIsImEiOiJjbDU5bmhlaGwwMTU1M2tvMTJidTJ1bjRxIn0.7BuOOOeDnw0ybTrxcv_I8Q`;\n\n/**\n * Reference: https://observablehq.com/@d3/zoomable-map-tiles\n * createZoomableMapTilesChart - This function using for generator zoomable tiles chart\n * container: HTMLDivElement - Chart container element;\n * svg: SVGElement - using for render map;\n * width?: number - chart width;\n * height?: number - chart height;\n * items: Item[] - hexagon points data includes id, coordinates,... We will have 'id' & 'coordinates' is require prop, some property will use to render information when click to hexagon item\n * features: Feature[] - geojson arrays. The first item is always main man (country, states,...), remain item will be sub area (religion)\n * geojson: d3.GeoPermissibleObjects. using to render map\n * scaleRatio: number - ratio to scale map\n * @returns svg chart\n */\nexport const createZoomableMapTilesChart = (\n  params: TypeZoomableMapTilesChart\n) => {\n  const {\n    svg,\n    width = 928,\n    height = 500,\n    items,\n    container,\n    features,\n    geojson,\n    scaleRatio,\n  } = params;\n  const $svg = d3.select(svg); // selection svg element to handle\n  const $container = d3.select(container); // selection container element to handle\n  $svg.html(\"\"); // trick to avoid duplicate data\n  $svg.attr(\"viewBox\", [0, 0, width, height]);\n  const projection = d3 // https://github.com/d3/d3-geo#projections\n    .geoMercator()\n    .scale(1 / (2 * Math.PI))\n    .translate([0, 0]);\n  const render = d3.geoPath(projection); // https://github.com/d3/d3-geo#paths\n  const tile = d3Tile // https://github.com/d3/d3-tile\n    .tile()\n    .extent([\n      [0, 0],\n      [width, height],\n    ])\n    .tileSize(512);\n  let image = $svg\n    .append(\"g\")\n    .attr(\"pointer-events\", \"none\")\n    .selectAll(\"image\");\n  const $area = $svg\n    .append(\"path\")\n    .attr(\"class\", \"feature-path\")\n    .attr(\"pointer-events\", \"none\")\n    .attr(\"fill\", () => \"red\");\n  const $map = $svg\n    .append(\"path\")\n    .attr(\"pointer-events\", \"none\")\n    .attr(\"fill\", \"none\")\n    .attr(\"class\", \"map-path\");\n  const vector = $svg.append(\"g\"); // holds hexagons\n  let hexes; // to hold hexagons\n  // init hexbin instance\n  // https://github.com/d3/d3-hexbin\n  // https://d3-graph-gallery.com/graph/density2d_hexbin.html\n  // https://observablehq.com/@d3/hexbin-map?collection=@d3/d3-hexbin\n  const hexbin = d3Hexbin\n    .hexbin()\n    .extent([\n      [0, 0],\n      [width, height],\n    ])\n    .radius(9)\n    .x((d) => {\n      const [x] = projection(d) as [number, number];\n      return x;\n    })\n    .y((d) => {\n      const [, y] = projection(d) as [number, number];\n      return y;\n    });\n  const points = items.map((item) => {\n    const { coordinates } = item;\n    return [...coordinates, item];\n  }) as unknown[] as [number, number][];\n  const zoomed = (transform: any) => {\n    $container\n      .selectAll(\".tooltip\")\n      .attr(\"visibility\", \"hidden\")\n      .style(\"opacity\", 0)\n      .style(\"visibility\", \"hidden\");\n    const tiles = tile(transform); // https://observablehq.com/@d3/zoomable-map-tiles\n    image = image // images get from api mapbox -> mapping to tiles layout\n      .data(tiles, (d: any) => d)\n      .join(\"image\")\n      .attr(\"xlink:href\", ([x, y, z]: any) => url(x, y, z))\n      .attr(\"x\", ([x]: any) => (x + tiles.translate[0]) * tiles.scale)\n      .attr(\"y\", ([, y]: any) => (y + tiles.translate[1]) * tiles.scale)\n      .attr(\"width\", tiles.scale)\n      .attr(\"height\", tiles.scale);\n    projection\n      .scale(transform.k / (2 * Math.PI))\n      .translate([transform.x, transform.y]);\n    hexes = vector.selectAll(\"path\").data(hexbin(points));\n    hexes\n      .enter()\n      .append(\"path\")\n      .merge(hexes as any)\n      .attr(\"transform\", (d) => `translate(${d.x},${d.y})`)\n      .attr(\"d\", hexbin.hexagon())\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"fill\", (datum: any) => {\n        const item: Item = datum[0][2];\n        const { color } = item;\n        return color;\n      })\n      .attr(\"stroke\", \"currentColor\")\n      .attr(\"stroke-width\", \"0.5\")\n      // eslint-disable-next-line func-names, prefer-arrow-callback\n      .on(\"click\", function (event: any, datum: any) {\n        try {\n          const item: Item = datum[0][2];\n          const { id } = item;\n          const { pageX, pageY } = event;\n          const $item = $container.select(`#item-${id}`);\n          const isVisible = $item.attr(\"visibility\") === \"visible\";\n          const status = `${isVisible ? \"hidden\" : \"visible\"}`;\n          $item\n            .attr(\"visibility\", status)\n            .style(\"visibility\", status)\n            .style(\"opacity\", `${isVisible ? \"0\" : \"1\"}`)\n            .style(\"left\", `${pageX + 20}px`)\n            .style(\"top\", `${pageY - 20}px`);\n        } catch (error) {\n          //\n        }\n      });\n    $map.attr(\"d\", render(geojson));\n    $area.attr(\"d\", render(features));\n  };\n  const zoom = d3\n    .zoom()\n    .scaleExtent([1 << 8, 1 << 30])\n    .extent([\n      [0, 0],\n      [width, height],\n    ])\n    .on(\"zoom\", ({ transform }) => zoomed(transform));\n  const centerCoordinates = d3.geoPath().centroid(features);\n  const projectionCenter = projection(centerCoordinates) as [number, number];\n  $svg\n    .call((selection: any) => zoom(selection))\n    .call((selection: any) =>\n      zoom.transform(\n        selection,\n        d3.zoomIdentity\n          .translate(width / 2, height / 2)\n          .scale(-1 << scaleRatio)\n          .translate(...projectionCenter)\n          .scale(-1)\n      )\n    );\n  return $svg.node();\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"D3ZoomableMapTiles_styles_item__s2l2w\"};","import React from \"react\";\nimport D3Chart, { IBaseD3ChartProps } from \"components/charts/D3Chart\";\nimport { createZoomableMapTilesChart } from \"./D3ZoomableMapTiles.utils\";\nimport { Item } from \"./D3ZoomableMapTiles.typings\";\nimport geojson from \"./singapor-geojson.json\";\nimport jsonData from \"./data.json\";\nimport styles from \"./D3ZoomableMapTiles.styles.module.scss\";\n\ninterface IProps extends IBaseD3ChartProps {\n  data: {\n    // geojson: d3.GeoPermissibleObjects | any;\n    // items: Item[];\n    // scaleRatio: number;\n    // renderItem: (item: Item) => React.ReactElement | React.ReactNode | any;\n    features: d3.GeoPermissibleObjects | any;\n  };\n}\n\nconst D3ZoomableMapTiles = ({\n  data: {\n    // will get from api later\n    // items, scaleRatio, geojson, renderItem,\n    features,\n  },\n  ...rest\n}: IProps) => {\n  const ref: React.MutableRefObject<HTMLDivElement | null> = React.useRef(null);\n  const refSVG = React.useRef(null);\n  const { points, scaleRatio } = jsonData;\n  const items = React.useMemo(\n    () =>\n      points.map((point) => ({\n        ...point,\n        coordinates: point.position,\n      })),\n    [points]\n  );\n  const renderItem = React.useCallback((item: Item) => {\n    const { id, name, position, attributes } = item;\n    const factories = [\n      {\n        label: \"#ID\",\n        value: id,\n      },\n      {\n        label: \"Item Name\",\n        value: name,\n      },\n      {\n        label: \"Coordinates\",\n        value: position,\n      },\n      {\n        label: \"Attributes\",\n        value: attributes,\n      },\n    ];\n    return factories.map(({ label, value }) => (\n      <div key={label} className={`${styles.item}`}>\n        <div className=\"font-medium\">{label}</div>\n        <div className=\"\">{value}</div>\n      </div>\n    ));\n  }, []);\n  const renderItems = React.useMemo(\n    () =>\n      items.map((item) => {\n        const { id } = item;\n        return (\n          <div\n            id={`item-${id}`}\n            key={id}\n            className=\"tooltip fixed -[1000] invisible opacity-0 flex flex-col p-[10px] h-[fit-content] bg-white rounded-[4px] shadow-xl text-black text-xs\"\n          >\n            {renderItem(item)}\n          </div>\n        );\n      }),\n    [items]\n  );\n  React.useLayoutEffect(() => {\n    if (ref.current && refSVG.current && !rest.isLoading) {\n      createZoomableMapTilesChart({\n        svg: refSVG.current,\n        container: ref.current,\n        features,\n        items: items as unknown[] as Item[],\n        geojson,\n        scaleRatio,\n      });\n    }\n  }, [ref, refSVG, rest.isLoading, features, items, geojson, scaleRatio]);\n  return (\n    <D3Chart\n      classNameContainer={`${rest.classNameContainer || \"\"} min-h-[500px]`}\n      ref={{ ref, refSVG } as any}\n      {...rest}\n    >\n      {renderItems}\n    </D3Chart>\n  );\n};\n\nexport default React.memo(D3ZoomableMapTiles);\n","import D3ZoomableMapTiles from \"./D3ZoomableMapTiles\";\n\nexport default D3ZoomableMapTiles;\n","import React from \"react\";\nimport D3ZoomableMapTiles from \"components/charts/D3ZoomableMapTiles\";\nimport { useDataResourceStore } from \"pages/data_resource\";\n\nconst ZoomableMapTilesChart = () => {\n  const { tiles } = useDataResourceStore();\n  if (!tiles) {\n    return null;\n  }\n  return (\n    <D3ZoomableMapTiles\n      data={{\n        features: tiles,\n      }}\n      chartName=\"Zoomable Map Tiles Chart\"\n    />\n  );\n};\n\nexport default React.memo(ZoomableMapTilesChart);\n"],"names":["defaultScale","t","k","defaultTranslate","x","y","constant","createZoomableMapTilesChart","params","svg","width","height","items","container","features","geojson","scaleRatio","$svg","d3","$container","html","attr","hexes","projection","scale","Math","PI","translate","render","tile","x0","y0","x1","y1","clampX","clampY","tileSize","zoomDelta","scale_","apply","this","arguments","translate_","z","log2","z0","round","max","pow","xmin","floor","xmax","min","Infinity","ceil","ymin","ymax","tiles","push","size","_","length","extent","clamp","d3Tile","image","append","selectAll","$area","$map","vector","hexbin","d3Hexbin","radius","d","points","map","item","coordinates","zoomed","transform","style","data","join","devicePixelRatio","url","enter","merge","hexagon","datum","color","on","event","id","pageX","pageY","$item","select","isVisible","status","error","zoom","scaleExtent","centerCoordinates","centroid","projectionCenter","call","selection","node","D3ZoomableMapTiles","rest","ref","React","refSVG","jsonData","point","position","renderItem","label","value","name","attributes","className","styles","renderItems","current","isLoading","D3Chart","classNameContainer","ZoomableMapTilesChart","useDataResourceStore","chartName"],"sourceRoot":""}